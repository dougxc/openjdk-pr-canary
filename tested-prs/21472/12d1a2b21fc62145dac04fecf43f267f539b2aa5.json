{
  "artifact_2049801169": {
    "java_home": "extracted/jdk-24",
    "java_version_output": "openjdk 24-internal 2025-03-18\nOpenJDK Runtime Environment (build 24-internal-merykitty-12d1a2b21fc62145dac04fecf43f267f539b2aa5)\nOpenJDK 64-Bit Server VM (build 24-internal-merykitty-12d1a2b21fc62145dac04fecf43f267f539b2aa5, mixed mode, sharing)"
  },
  "status": "passed",
  "history": [
    "21600d7dcd672ea2647032e3ea2a018a2f7b5edc.json",
    "74fbc7d5818d4d091e55c620f30f870646fc019d.json"
  ],
  "datetime": "2024-10-13T08:00:14.825045+00:00",
  "url": "https://github.com/openjdk/jdk/pull/21472",
  "number": 21472,
  "title": "8341697: C2: Register allocation inefficiency in tight loop",
  "head_sha": "12d1a2b21fc62145dac04fecf43f267f539b2aa5",
  "run_url": "https://github.com/dougxc/openjdk-pr-canary/actions/runs/11312585741"
}